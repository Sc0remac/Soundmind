"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/enrich/lastfm/route";
exports.ids = ["app/api/enrich/lastfm/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fenrich%2Flastfm%2Froute&page=%2Fapi%2Fenrich%2Flastfm%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fenrich%2Flastfm%2Froute.ts&appDir=%2FUsers%2Fcormackerr%2FDesktop%2Fsoundmind%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fcormackerr%2FDesktop%2Fsoundmind&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fenrich%2Flastfm%2Froute&page=%2Fapi%2Fenrich%2Flastfm%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fenrich%2Flastfm%2Froute.ts&appDir=%2FUsers%2Fcormackerr%2FDesktop%2Fsoundmind%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fcormackerr%2FDesktop%2Fsoundmind&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_cormackerr_Desktop_soundmind_app_api_enrich_lastfm_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/enrich/lastfm/route.ts */ \"(rsc)/./app/api/enrich/lastfm/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/enrich/lastfm/route\",\n        pathname: \"/api/enrich/lastfm\",\n        filename: \"route\",\n        bundlePath: \"app/api/enrich/lastfm/route\"\n    },\n    resolvedPagePath: \"/Users/cormackerr/Desktop/soundmind/app/api/enrich/lastfm/route.ts\",\n    nextConfigOutput,\n    userland: _Users_cormackerr_Desktop_soundmind_app_api_enrich_lastfm_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/enrich/lastfm/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZlbnJpY2glMkZsYXN0Zm0lMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmVucmljaCUyRmxhc3RmbSUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmVucmljaCUyRmxhc3RmbSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmNvcm1hY2tlcnIlMkZEZXNrdG9wJTJGc291bmRtaW5kJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRmNvcm1hY2tlcnIlMkZEZXNrdG9wJTJGc291bmRtaW5kJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNrQjtBQUMvRjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL3NvdW5kbWluZC8/OTg4NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvY29ybWFja2Vyci9EZXNrdG9wL3NvdW5kbWluZC9hcHAvYXBpL2VucmljaC9sYXN0Zm0vcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2VucmljaC9sYXN0Zm0vcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9lbnJpY2gvbGFzdGZtXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9lbnJpY2gvbGFzdGZtL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL2Nvcm1hY2tlcnIvRGVza3RvcC9zb3VuZG1pbmQvYXBwL2FwaS9lbnJpY2gvbGFzdGZtL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9lbnJpY2gvbGFzdGZtL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fenrich%2Flastfm%2Froute&page=%2Fapi%2Fenrich%2Flastfm%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fenrich%2Flastfm%2Froute.ts&appDir=%2FUsers%2Fcormackerr%2FDesktop%2Fsoundmind%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fcormackerr%2FDesktop%2Fsoundmind&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/enrich/lastfm/route.ts":
/*!****************************************!*\
  !*** ./app/api/enrich/lastfm/route.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_supabaseAdmin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/supabaseAdmin */ \"(rsc)/./lib/supabaseAdmin.ts\");\n// app/api/enrich/lastfm/route.ts\n\n\n/**\n * LAST.FM ENRICHMENT\n * - Looks at your most recent listens (last 100) and enriches their tracks with:\n *   - genre_primary   (string)\n *   - genre_tags      (string[])\n *   - derived_energy  (0..1)\n *   - derived_valence (0..1)\n *\n * We use last.fm track.getTopTags + artist.getTopTags.\n * No user auth: requires LASTFM_API_KEY in env.\n */ const LASTFM_KEY = process.env.LASTFM_API_KEY;\n// Basic tag normalization/aliases\nconst TAG_ALIAS = {\n    \"hip hop\": \"hip-hop\",\n    hiphop: \"hip-hop\",\n    \"lo fi\": \"lo-fi\",\n    lofi: \"lo-fi\",\n    edm: \"edm\",\n    dnb: \"drum-and-bass\",\n    \"drum n bass\": \"drum-and-bass\",\n    \"drum & bass\": \"drum-and-bass\",\n    house: \"house\",\n    techno: \"techno\",\n    trance: \"trance\",\n    ambient: \"ambient\",\n    chill: \"chill\",\n    \"chill out\": \"chill\",\n    rock: \"rock\",\n    metal: \"metal\",\n    pop: \"pop\",\n    trap: \"trap\",\n    dance: \"dance\",\n    \"r&b\": \"rnb\",\n    \"rnb\": \"rnb\"\n};\n// Heuristic maps for deriving energy/valence from tags.\n// NOTE: keys with hyphens MUST be quoted in TS.\nconst TAG_TO_ENERGY = {\n    rave: 0.9,\n    hardstyle: 0.95,\n    edm: 0.8,\n    dance: 0.7,\n    rock: 0.7,\n    techno: 0.8,\n    house: 0.7,\n    chill: 0.2,\n    ambient: 0.1,\n    acoustic: 0.2,\n    downtempo: 0.3,\n    \"lo-fi\": 0.25,\n    lofi: 0.25,\n    pop: 0.6,\n    hiphop: 0.6,\n    \"hip-hop\": 0.6,\n    trap: 0.7,\n    metal: 0.85,\n    trance: 0.75,\n    \"drum-and-bass\": 0.85\n};\nconst TAG_TO_VALENCE = {\n    happy: 0.9,\n    upbeat: 0.8,\n    uplifting: 0.8,\n    melancholic: 0.2,\n    sad: 0.1,\n    dark: 0.2,\n    chill: 0.6,\n    ambient: 0.5,\n    acoustic: 0.7,\n    pop: 0.7,\n    \"hip-hop\": 0.6,\n    hiphop: 0.6,\n    trap: 0.5,\n    techno: 0.4,\n    metal: 0.3,\n    trance: 0.6\n};\n// Useful stopwords we don’t want as “genres”\nconst TAG_STOP = new Set([\n    \"seen live\",\n    \"favorites\",\n    \"favorite\",\n    \"awesome\",\n    \"90s\",\n    \"00s\",\n    \"2010s\",\n    \"2020s\",\n    \"uk\",\n    \"usa\",\n    \"british\",\n    \"swedish\",\n    \"german\",\n    \"female vocalists\",\n    \"male vocalists\"\n]);\nfunction normalizeTag(t) {\n    const s = t.trim().toLowerCase();\n    const clean = s.replace(/\\s+/g, \" \"); // collapse spaces\n    const alias = TAG_ALIAS[clean] || clean;\n    // strip non-word characters except space and hyphen\n    return alias.replace(/[^\\w\\s-]/g, \"\").trim();\n}\nfunction scoreTags(tags) {\n    // Return cleaned, weighted tag list and top candidates for genre_primary\n    const map = new Map();\n    for (const tag of tags || []){\n        if (!tag?.name) continue;\n        let n = normalizeTag(tag.name);\n        if (!n || TAG_STOP.has(n)) continue;\n        const w = Math.max(1, Number(tag.count || 1));\n        map.set(n, (map.get(n) || 0) + w);\n    }\n    // sort by weight desc\n    const entries = [\n        ...map.entries()\n    ].sort((a, b)=>b[1] - a[1]);\n    const ordered = entries.map(([k])=>k);\n    const top = entries.length > 0 ? entries[0][0] : null;\n    return {\n        ordered,\n        top\n    };\n}\nfunction deriveEnergyValence(tags) {\n    if (!tags?.length) return {\n        energy: null,\n        valence: null\n    };\n    let eSum = 0, eN = 0, vSum = 0, vN = 0;\n    for (const t of tags){\n        if (t in TAG_TO_ENERGY) {\n            eSum += TAG_TO_ENERGY[t];\n            eN++;\n        }\n        if (t in TAG_TO_VALENCE) {\n            vSum += TAG_TO_VALENCE[t];\n            vN++;\n        }\n    }\n    return {\n        energy: eN ? Number((eSum / eN).toFixed(3)) : null,\n        valence: vN ? Number((vSum / vN).toFixed(3)) : null\n    };\n}\nasync function lf(method, params) {\n    const url = new URL(\"https://ws.audioscrobbler.com/2.0/\");\n    url.searchParams.set(\"method\", method);\n    url.searchParams.set(\"api_key\", String(LASTFM_KEY));\n    url.searchParams.set(\"format\", \"json\");\n    for (const [k, v] of Object.entries(params))url.searchParams.set(k, v);\n    const r = await fetch(url.toString(), {\n        next: {\n            revalidate: 0\n        }\n    });\n    if (!r.ok) throw new Error(`Last.fm ${method} ${r.status}`);\n    return r.json();\n}\nasync function fetchTagsFor(artist, track) {\n    const tags = [];\n    try {\n        const jt = await lf(\"track.getTopTags\", {\n            artist,\n            track,\n            autocorrect: \"1\"\n        });\n        if (jt?.toptags?.tag?.length) tags.push(...jt.toptags.tag);\n    } catch  {\n    // ignore\n    }\n    // If nothing from track, try artist\n    if (tags.length === 0) {\n        try {\n            const ja = await lf(\"artist.getTopTags\", {\n                artist,\n                autocorrect: \"1\"\n            });\n            if (ja?.toptags?.tag?.length) tags.push(...ja.toptags.tag);\n        } catch  {\n        // ignore\n        }\n    }\n    return tags;\n}\nasync function POST() {\n    if (!LASTFM_KEY) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            ok: false,\n            error: \"Missing LASTFM_API_KEY\"\n        }, {\n            status: 500\n        });\n    }\n    // 1) Get the last 100 listened track IDs\n    const { data: listens, error: lErr } = await _lib_supabaseAdmin__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"spotify_listens\").select(\"track_id\").order(\"played_at\", {\n        ascending: false\n    }).limit(100);\n    if (lErr) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        ok: false,\n        error: lErr.message\n    }, {\n        status: 500\n    });\n    const ids = Array.from(new Set((listens || []).map((r)=>r.track_id))).slice(0, 100);\n    if (ids.length === 0) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        ok: true,\n        updated: 0,\n        note: \"No recent listens\"\n    });\n    // 2) Fetch tracks + artists\n    const [{ data: tracks, error: tErr }, { data: links }, { data: artists }] = await Promise.all([\n        _lib_supabaseAdmin__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"spotify_tracks\").select(\"id,name,genre_primary,genre_tags\").in(\"id\", ids),\n        _lib_supabaseAdmin__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"spotify_track_artists\").select(\"track_id,artist_id\").in(\"track_id\", ids),\n        _lib_supabaseAdmin__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"spotify_artists\").select(\"id,name\")\n    ]);\n    if (tErr) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        ok: false,\n        error: tErr.message\n    }, {\n        status: 500\n    });\n    const artistMap = new Map();\n    (artists || []).forEach((a)=>artistMap.set(a.id, a.name));\n    const trackArtists = new Map();\n    (links || []).forEach((lnk)=>{\n        const arr = trackArtists.get(lnk.track_id) || [];\n        const nm = artistMap.get(lnk.artist_id);\n        if (nm) arr.push(nm);\n        trackArtists.set(lnk.track_id, arr);\n    });\n    // 3) For each track, call last.fm and update the row\n    let updated = 0;\n    const results = [];\n    for (const tr of tracks){\n        const artistsForTrack = trackArtists.get(tr.id) || [];\n        const artist = artistsForTrack[0] || \"\"; // pick the first (primary) artist\n        if (!artist || !tr.name) continue;\n        const tags = await fetchTagsFor(artist, tr.name);\n        const { ordered, top } = scoreTags(tags);\n        const { energy, valence } = deriveEnergyValence(ordered);\n        const genre_primary = top || tr[\"genre_primary\"] || null;\n        const genre_tags = ordered.slice(0, 8);\n        const { error: uErr } = await _lib_supabaseAdmin__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"spotify_tracks\").update({\n            genre_primary,\n            genre_tags: genre_tags.length ? genre_tags : null,\n            derived_energy: energy,\n            derived_valence: valence,\n            last_enriched_at: new Date().toISOString(),\n            meta_provider: {\n                ...typeof tr.meta_provider === \"object\" ? tr.meta_provider : {},\n                lastfm: {\n                    ok: true,\n                    tagsFetched: tags.length,\n                    artist,\n                    track: tr.name\n                }\n            }\n        }).eq(\"id\", tr.id);\n        results.push({\n            id: tr.id,\n            track: tr.name,\n            artist,\n            topTag: genre_primary,\n            tagCount: tags.length,\n            updated: !uErr,\n            error: uErr?.message || null\n        });\n        if (!uErr) updated++;\n        // Small delay to be polite to Last.fm\n        await new Promise((r)=>setTimeout(r, 120));\n    }\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        ok: true,\n        updated,\n        processed: tracks?.length || 0,\n        results\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2VucmljaC9sYXN0Zm0vcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsaUNBQWlDO0FBQ1U7QUFDUztBQUVwRDs7Ozs7Ozs7OztDQVVDLEdBRUQsTUFBTUUsYUFBYUMsUUFBUUMsR0FBRyxDQUFDQyxjQUFjO0FBRTdDLGtDQUFrQztBQUNsQyxNQUFNQyxZQUFvQztJQUN4QyxXQUFXO0lBQ1hDLFFBQVE7SUFDUixTQUFTO0lBQ1RDLE1BQU07SUFDTkMsS0FBSztJQUNMQyxLQUFLO0lBQ0wsZUFBZTtJQUNmLGVBQWU7SUFDZkMsT0FBTztJQUNQQyxRQUFRO0lBQ1JDLFFBQVE7SUFDUkMsU0FBUztJQUNUQyxPQUFPO0lBQ1AsYUFBYTtJQUNiQyxNQUFNO0lBQ05DLE9BQU87SUFDUEMsS0FBSztJQUNMQyxNQUFNO0lBQ05DLE9BQU87SUFDUCxPQUFPO0lBQ1AsT0FBTztBQUNUO0FBRUEsd0RBQXdEO0FBQ3hELGdEQUFnRDtBQUNoRCxNQUFNQyxnQkFBd0M7SUFDNUNDLE1BQU07SUFDTkMsV0FBVztJQUNYZCxLQUFLO0lBQ0xXLE9BQU87SUFDUEosTUFBTTtJQUNOSixRQUFRO0lBQ1JELE9BQU87SUFDUEksT0FBTztJQUNQRCxTQUFTO0lBQ1RVLFVBQVU7SUFDVkMsV0FBVztJQUNYLFNBQVM7SUFDVGpCLE1BQU07SUFDTlUsS0FBSztJQUNMWCxRQUFRO0lBQ1IsV0FBVztJQUNYWSxNQUFNO0lBQ05GLE9BQU87SUFDUEosUUFBUTtJQUNSLGlCQUFpQjtBQUNuQjtBQUVBLE1BQU1hLGlCQUF5QztJQUM3Q0MsT0FBTztJQUNQQyxRQUFRO0lBQ1JDLFdBQVc7SUFDWEMsYUFBYTtJQUNiQyxLQUFLO0lBQ0xDLE1BQU07SUFDTmpCLE9BQU87SUFDUEQsU0FBUztJQUNUVSxVQUFVO0lBQ1ZOLEtBQUs7SUFDTCxXQUFXO0lBQ1hYLFFBQVE7SUFDUlksTUFBTTtJQUNOUCxRQUFRO0lBQ1JLLE9BQU87SUFDUEosUUFBUTtBQUNWO0FBRUEsNkNB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V0FBV3ZFLE1BQU0sR0FBR3VFLGFBQWE7WUFDN0NHLGdCQUFnQnhFO1lBQ2hCeUUsaUJBQWlCeEU7WUFDakJ5RSxrQkFBa0IsSUFBSUMsT0FBT0MsV0FBVztZQUN4Q0MsZUFBZTtnQkFDYixHQUFJLE9BQU8sR0FBWUEsYUFBYSxLQUFLLFdBQVcsR0FBWUEsYUFBYSxHQUFHLENBQUMsQ0FBQztnQkFDbEZDLFFBQVE7b0JBQUV6RCxJQUFJO29CQUFNMEQsYUFBYXRHLEtBQUtxQixNQUFNO29CQUFFNEI7b0JBQVFDLE9BQU91QyxHQUFHckYsSUFBSTtnQkFBQztZQUN2RTtRQUNGLEdBQ0NtRyxFQUFFLENBQUMsTUFBTWQsR0FBR1AsRUFBRTtRQUVqQk0sUUFBUWxDLElBQUksQ0FBQztZQUNYNEIsSUFBSU8sR0FBR1AsRUFBRTtZQUNUaEMsT0FBT3VDLEdBQUdyRixJQUFJO1lBQ2Q2QztZQUNBdUQsUUFBUWI7WUFDUmMsVUFBVXpHLEtBQUtxQixNQUFNO1lBQ3JCa0QsU0FBUyxDQUFDc0I7WUFDVnBDLE9BQU9vQyxNQUFNM0IsV0FBVztRQUMxQjtRQUVBLElBQUksQ0FBQzJCLE1BQU10QjtRQUNYLHNDQUFzQztRQUN0QyxNQUFNLElBQUlNLFFBQVEsQ0FBQ3RDLElBQU1tRSxXQUFXbkUsR0FBRztJQUN6QztJQUVBLE9BQU9uRixxREFBWUEsQ0FBQzJGLElBQUksQ0FBQztRQUFFSCxJQUFJO1FBQU0yQjtRQUFTb0MsV0FBV2xDLFFBQVFwRCxVQUFVO1FBQUdtRTtJQUFRO0FBQ3hGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc291bmRtaW5kLy4vYXBwL2FwaS9lbnJpY2gvbGFzdGZtL3JvdXRlLnRzPzFlYjYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gYXBwL2FwaS9lbnJpY2gvbGFzdGZtL3JvdXRlLnRzXG5pbXBvcnQgeyBOZXh0UmVzcG9uc2UgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIjtcbmltcG9ydCB7IHN1cGFiYXNlQWRtaW4gfSBmcm9tIFwiQC9saWIvc3VwYWJhc2VBZG1pblwiO1xuXG4vKipcbiAqIExBU1QuRk0gRU5SSUNITUVOVFxuICogLSBMb29rcyBhdCB5b3VyIG1vc3QgcmVjZW50IGxpc3RlbnMgKGxhc3QgMTAwKSBhbmQgZW5yaWNoZXMgdGhlaXIgdHJhY2tzIHdpdGg6XG4gKiAgIC0gZ2VucmVfcHJpbWFyeSAgIChzdHJpbmcpXG4gKiAgIC0gZ2VucmVfdGFncyAgICAgIChzdHJpbmdbXSlcbiAqICAgLSBkZXJpdmVkX2VuZXJneSAgKDAuLjEpXG4gKiAgIC0gZGVyaXZlZF92YWxlbmNlICgwLi4xKVxuICpcbiAqIFdlIHVzZSBsYXN0LmZtIHRyYWNrLmdldFRvcFRhZ3MgKyBhcnRpc3QuZ2V0VG9wVGFncy5cbiAqIE5vIHVzZXIgYXV0aDogcmVxdWlyZXMgTEFTVEZNX0FQSV9LRVkgaW4gZW52LlxuICovXG5cbmNvbnN0IExBU1RGTV9LRVkgPSBwcm9jZXNzLmVudi5MQVNURk1fQVBJX0tFWTtcblxuLy8gQmFzaWMgdGFnIG5vcm1hbGl6YXRpb24vYWxpYXNlc1xuY29uc3QgVEFHX0FMSUFTOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+ID0ge1xuICBcImhpcCBob3BcIjogXCJoaXAtaG9wXCIsXG4gIGhpcGhvcDogXCJoaXAtaG9wXCIsXG4gIFwibG8gZmlcIjogXCJsby1maVwiLFxuICBsb2ZpOiBcImxvLWZpXCIsXG4gIGVkbTogXCJlZG1cIixcbiAgZG5iOiBcImRydW0tYW5kLWJhc3NcIixcbiAgXCJkcnVtIG4gYmFzc1wiOiBcImRydW0tYW5kLWJhc3NcIixcbiAgXCJkcnVtICYgYmFzc1wiOiBcImRydW0tYW5kLWJhc3NcIixcbiAgaG91c2U6IFwiaG91c2VcIixcbiAgdGVjaG5vOiBcInRlY2hub1wiLFxuICB0cmFuY2U6IFwidHJhbmNlXCIsXG4gIGFtYmllbnQ6IFwiYW1iaWVudFwiLFxuICBjaGlsbDogXCJjaGlsbFwiLFxuICBcImNoaWxsIG91dFwiOiBcImNoaWxsXCIsXG4gIHJvY2s6IFwicm9ja1wiLFxuICBtZXRhbDogXCJtZXRhbFwiLFxuICBwb3A6IFwicG9wXCIsXG4gIHRyYXA6IFwidHJhcFwiLFxuICBkYW5jZTogXCJkYW5jZVwiLFxuICBcInImYlwiOiBcInJuYlwiLFxuICBcInJuYlwiOiBcInJuYlwiLFxufTtcblxuLy8gSGV1cmlzdGljIG1hcHMgZm9yIGRlcml2aW5nIGVuZXJneS92YWxlbmNlIGZyb20gdGFncy5cbi8vIE5PVEU6IGtleXMgd2l0aCBoeXBoZW5zIE1VU1QgYmUgcXVvdGVkIGluIFRTLlxuY29uc3QgVEFHX1RPX0VORVJHWTogUmVjb3JkPHN0cmluZywgbnVtYmVyPiA9IHtcbiAgcmF2ZTogMC45LFxuICBoYXJkc3R5bGU6IDAuOTUsXG4gIGVkbTogMC44LFxuICBkYW5jZTogMC43LFxuICByb2NrOiAwLjcsXG4gIHRlY2hubzogMC44LFxuICBob3VzZTogMC43LFxuICBjaGlsbDogMC4yLFxuICBhbWJpZW50OiAwLjEsXG4gIGFjb3VzdGljOiAwLjIsXG4gIGRvd250ZW1wbzogMC4zLFxuICBcImxvLWZpXCI6IDAuMjUsXG4gIGxvZmk6IDAuMjUsXG4gIHBvcDogMC42LFxuICBoaXBob3A6IDAuNixcbiAgXCJoaXAtaG9wXCI6IDAuNixcbiAgdHJhcDogMC43LFxuICBtZXRhbDogMC44NSxcbiAgdHJhbmNlOiAwLjc1LFxuICBcImRydW0tYW5kLWJhc3NcIjogMC44NSxcbn07XG5cbmNvbnN0IFRBR19UT19WQUxFTkNFOiBSZWNvcmQ8c3RyaW5nLCBudW1iZXI+ID0ge1xuICBoYXBweTogMC45LFxuICB1cGJlYXQ6IDAuOCxcbiAgdXBsaWZ0aW5nOiAwLjgsXG4gIG1lbGFuY2hvbGljOiAwLjIsXG4gIHNhZDogMC4xLFxuICBkYXJrOiAwLjIsXG4gIGNoaWxsOiAwLjYsXG4gIGFtYmllbnQ6IDAuNSxcbiAgYWNvdXN0aWM6IDAuNyxcbiAgcG9wOiAwLjcsXG4gIFwiaGlwLWhvcFwiOiAwLjYsXG4gIGhpcGhvcDogMC42LFxuICB0cmFwOiAwLjUsXG4gIHRlY2hubzogMC40LFxuICBtZXRhbDogMC4zLFxuICB0cmFuY2U6IDAuNixcbn07XG5cbi8vIFVzZWZ1bCBzdG9wd29yZHMgd2UgZG9u4oCZdCB3YW50IGFzIOKAnGdlbnJlc+KAnVxuY29uc3QgVEFHX1NUT1AgPSBuZXcgU2V0KFtcbiAgXCJzZWVuIGxpdmVcIixcbiAgXCJmYXZvcml0ZXNcIixcbiAgXCJmYXZvcml0ZVwiLFxuICBcImF3ZXNvbWVcIixcbiAgXCI5MHNcIixcbiAgXCIwMHNcIixcbiAgXCIyMDEwc1wiLFxuICBcIjIwMjBzXCIsXG4gIFwidWtcIixcbiAgXCJ1c2FcIixcbiAgXCJicml0aXNoXCIsXG4gIFwic3dlZGlzaFwiLFxuICBcImdlcm1hblwiLFxuICBcImZlbWFsZSB2b2NhbGlzdHNcIixcbiAgXCJtYWxlIHZvY2FsaXN0c1wiLFxuXSk7XG5cbnR5cGUgTGFzdGZtVGFnID0geyBuYW1lOiBzdHJpbmc7IGNvdW50PzogbnVtYmVyIH07XG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZVRhZyh0OiBzdHJpbmcpOiBzdHJpbmcge1xuICBjb25zdCBzID0gdC50cmltKCkudG9Mb3dlckNhc2UoKTtcbiAgY29uc3QgY2xlYW4gPSBzLnJlcGxhY2UoL1xccysvZywgXCIgXCIpOyAvLyBjb2xsYXBzZSBzcGFjZXNcbiAgY29uc3QgYWxpYXMgPSBUQUdfQUxJQVNbY2xlYW5dIHx8IGNsZWFuO1xuICAvLyBzdHJpcCBub24td29yZCBjaGFyYWN0ZXJzIGV4Y2VwdCBzcGFjZSBhbmQgaHlwaGVuXG4gIHJldHVybiBhbGlhcy5yZXBsYWNlKC9bXlxcd1xccy1dL2csIFwiXCIpLnRyaW0oKTtcbn1cblxuZnVuY3Rpb24gc2NvcmVUYWdzKHRhZ3M6IExhc3RmbVRhZ1tdKSB7XG4gIC8vIFJldHVybiBjbGVhbmVkLCB3ZWlnaHRlZCB0YWcgbGlzdCBhbmQgdG9wIGNhbmRpZGF0ZXMgZm9yIGdlbnJlX3ByaW1hcnlcbiAgY29uc3QgbWFwID0gbmV3IE1hcDxzdHJpbmcsIG51bWJlcj4oKTtcbiAgZm9yIChjb25zdCB0YWcgb2YgdGFncyB8fCBbXSkge1xuICAgIGlmICghdGFnPy5uYW1lKSBjb250aW51ZTtcbiAgICBsZXQgbiA9IG5vcm1hbGl6ZVRhZyh0YWcubmFtZSk7XG4gICAgaWYgKCFuIHx8IFRBR19TVE9QLmhhcyhuKSkgY29udGludWU7XG4gICAgY29uc3QgdyA9IE1hdGgubWF4KDEsIE51bWJlcih0YWcuY291bnQgfHwgMSkpO1xuICAgIG1hcC5zZXQobiwgKG1hcC5nZXQobikgfHwgMCkgKyB3KTtcbiAgfVxuICAvLyBzb3J0IGJ5IHdlaWdodCBkZXNjXG4gIGNvbnN0IGVudHJpZXMgPSBbLi4ubWFwLmVudHJpZXMoKV0uc29ydCgoYSwgYikgPT4gYlsxXSAtIGFbMV0pO1xuICBjb25zdCBvcmRlcmVkID0gZW50cmllcy5tYXAoKFtrXSkgPT4gayk7XG4gIGNvbnN0IHRvcCA9IGVudHJpZXMubGVuZ3RoID4gMCA/IGVudHJpZXNbMF1bMF0gOiBudWxsO1xuICByZXR1cm4geyBvcmRlcmVkLCB0b3AgfTtcbn1cblxuZnVuY3Rpb24gZGVyaXZlRW5lcmd5VmFsZW5jZSh0YWdzOiBzdHJpbmdbXSkge1xuICBpZiAoIXRhZ3M/Lmxlbmd0aCkgcmV0dXJuIHsgZW5lcmd5OiBudWxsIGFzIG51bWJlciB8IG51bGwsIHZhbGVuY2U6IG51bGwgYXMgbnVtYmVyIHwgbnVsbCB9O1xuICBsZXQgZVN1bSA9IDAsXG4gICAgZU4gPSAwLFxuICAgIHZTdW0gPSAwLFxuICAgIHZOID0gMDtcbiAgZm9yIChjb25zdCB0IG9mIHRhZ3MpIHtcbiAgICBpZiAodCBpbiBUQUdfVE9fRU5FUkdZKSB7XG4gICAgICBlU3VtICs9IFRBR19UT19FTkVSR1lbdF07XG4gICAgICBlTisrO1xuICAgIH1cbiAgICBpZiAodCBpbiBUQUdfVE9fVkFMRU5DRSkge1xuICAgICAgdlN1bSArPSBUQUdfVE9fVkFMRU5DRVt0XTtcbiAgICAgIHZOKys7XG4gICAgfVxuICB9XG4gIHJldHVybiB7XG4gICAgZW5lcmd5OiBlTiA/IE51bWJlcigoZVN1bSAvIGVOKS50b0ZpeGVkKDMpKSA6IG51bGwsXG4gICAgdmFsZW5jZTogdk4gPyBOdW1iZXIoKHZTdW0gLyB2TikudG9GaXhlZCgzKSkgOiBudWxsLFxuICB9O1xufVxuXG5hc3luYyBmdW5jdGlvbiBsZihtZXRob2Q6IHN0cmluZywgcGFyYW1zOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+KSB7XG4gIGNvbnN0IHVybCA9IG5ldyBVUkwoXCJodHRwczovL3dzLmF1ZGlvc2Nyb2JibGVyLmNvbS8yLjAvXCIpO1xuICB1cmwuc2VhcmNoUGFyYW1zLnNldChcIm1ldGhvZFwiLCBtZXRob2QpO1xuICB1cmwuc2VhcmNoUGFyYW1zLnNldChcImFwaV9rZXlcIiwgU3RyaW5nKExBU1RGTV9LRVkpKTtcbiAgdXJsLnNlYXJjaFBhcmFtcy5zZXQoXCJmb3JtYXRcIiwgXCJqc29uXCIpO1xuICBmb3IgKGNvbnN0IFtrLCB2XSBvZiBPYmplY3QuZW50cmllcyhwYXJhbXMpKSB1cmwuc2VhcmNoUGFyYW1zLnNldChrLCB2KTtcbiAgY29uc3QgciA9IGF3YWl0IGZldGNoKHVybC50b1N0cmluZygpLCB7IG5leHQ6IHsgcmV2YWxpZGF0ZTogMCB9IH0pO1xuICBpZiAoIXIub2spIHRocm93IG5ldyBFcnJvcihgTGFzdC5mbSAke21ldGhvZH0gJHtyLnN0YXR1c31gKTtcbiAgcmV0dXJuIHIuanNvbigpO1xufVxuXG5hc3luYyBmdW5jdGlvbiBmZXRjaFRhZ3NGb3IoYXJ0aXN0OiBzdHJpbmcsIHRyYWNrOiBzdHJpbmcpOiBQcm9taXNlPExhc3RmbVRhZ1tdPiB7XG4gIGNvbnN0IHRhZ3M6IExhc3RmbVRhZ1tdID0gW107XG4gIHRyeSB7XG4gICAgY29uc3QganQgPSBhd2FpdCBsZihcInRyYWNrLmdldFRvcFRhZ3NcIiwge1xuICAgICAgYXJ0aXN0LFxuICAgICAgdHJhY2ssXG4gICAgICBhdXRvY29ycmVjdDogXCIxXCIsXG4gICAgfSk7XG4gICAgaWYgKGp0Py50b3B0YWdzPy50YWc/Lmxlbmd0aCkgdGFncy5wdXNoKC4uLmp0LnRvcHRhZ3MudGFnKTtcbiAgfSBjYXRjaCB7XG4gICAgLy8gaWdub3JlXG4gIH1cbiAgLy8gSWYgbm90aGluZyBmcm9tIHRyYWNrLCB0cnkgYXJ0aXN0XG4gIGlmICh0YWdzLmxlbmd0aCA9PT0gMCkge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBqYSA9IGF3YWl0IGxmKFwiYXJ0aXN0LmdldFRvcFRhZ3NcIiwgeyBhcnRpc3QsIGF1dG9jb3JyZWN0OiBcIjFcIiB9KTtcbiAgICAgIGlmIChqYT8udG9wdGFncz8udGFnPy5sZW5ndGgpIHRhZ3MucHVzaCguLi5qYS50b3B0YWdzLnRhZyk7XG4gICAgfSBjYXRjaCB7XG4gICAgICAvLyBpZ25vcmVcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRhZ3M7XG59XG5cbnR5cGUgVHJhY2tSb3cgPSB7XG4gIGlkOiBzdHJpbmc7XG4gIG5hbWU6IHN0cmluZztcbn07XG5cbnR5cGUgTGlua1JvdyA9IHsgdHJhY2tfaWQ6IHN0cmluZzsgYXJ0aXN0X2lkOiBzdHJpbmcgfTtcbnR5cGUgQXJ0aXN0Um93ID0geyBpZDogc3RyaW5nOyBuYW1lOiBzdHJpbmcgfTtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBPU1QoKSB7XG4gIGlmICghTEFTVEZNX0tFWSkge1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgIHsgb2s6IGZhbHNlLCBlcnJvcjogXCJNaXNzaW5nIExBU1RGTV9BUElfS0VZXCIgfSxcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICk7XG4gIH1cblxuICAvLyAxKSBHZXQgdGhlIGxhc3QgMTAwIGxpc3RlbmVkIHRyYWNrIElEc1xuICBjb25zdCB7IGRhdGE6IGxpc3RlbnMsIGVycm9yOiBsRXJyIH0gPSBhd2FpdCBzdXBhYmFzZUFkbWluXG4gICAgLmZyb20oXCJzcG90aWZ5X2xpc3RlbnNcIilcbiAgICAuc2VsZWN0KFwidHJhY2tfaWRcIilcbiAgICAub3JkZXIoXCJwbGF5ZWRfYXRcIiwgeyBhc2NlbmRpbmc6IGZhbHNlIH0pXG4gICAgLmxpbWl0KDEwMCk7XG4gIGlmIChsRXJyKSByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBvazogZmFsc2UsIGVycm9yOiBsRXJyLm1lc3NhZ2UgfSwgeyBzdGF0dXM6IDUwMCB9KTtcblxuICBjb25zdCBpZHMgPSBBcnJheS5mcm9tKG5ldyBTZXQoKGxpc3RlbnMgfHwgW10pLm1hcCgocikgPT4gci50cmFja19pZCkpKS5zbGljZSgwLCAxMDApO1xuICBpZiAoaWRzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgb2s6IHRydWUsIHVwZGF0ZWQ6IDAsIG5vdGU6IFwiTm8gcmVjZW50IGxpc3RlbnNcIiB9KTtcblxuICAvLyAyKSBGZXRjaCB0cmFja3MgKyBhcnRpc3RzXG4gIGNvbnN0IFt7IGRhdGE6IHRyYWNrcywgZXJyb3I6IHRFcnIgfSwgeyBkYXRhOiBsaW5rcyB9LCB7IGRhdGE6IGFydGlzdHMgfV0gPSBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgc3VwYWJhc2VBZG1pbi5mcm9tKFwic3BvdGlmeV90cmFja3NcIikuc2VsZWN0KFwiaWQsbmFtZSxnZW5yZV9wcmltYXJ5LGdlbnJlX3RhZ3NcIikuaW4oXCJpZFwiLCBpZHMpLFxuICAgIHN1cGFiYXNlQWRtaW4uZnJvbShcInNwb3RpZnlfdHJhY2tfYXJ0aXN0c1wiKS5zZWxlY3QoXCJ0cmFja19pZCxhcnRpc3RfaWRcIikuaW4oXCJ0cmFja19pZFwiLCBpZHMpLFxuICAgIHN1cGFiYXNlQWRtaW4uZnJvbShcInNwb3RpZnlfYXJ0aXN0c1wiKS5zZWxlY3QoXCJpZCxuYW1lXCIpLFxuICBdIGFzIGNvbnN0KTtcblxuICBpZiAodEVycikgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgb2s6IGZhbHNlLCBlcnJvcjogdEVyci5tZXNzYWdlIH0sIHsgc3RhdHVzOiA1MDAgfSk7XG5cbiAgY29uc3QgYXJ0aXN0TWFwID0gbmV3IE1hcDxzdHJpbmcsIHN0cmluZz4oKTtcbiAgKGFydGlzdHMgfHwgW10pLmZvckVhY2goKGEpID0+IGFydGlzdE1hcC5zZXQoYS5pZCwgYS5uYW1lKSk7XG5cbiAgY29uc3QgdHJhY2tBcnRpc3RzID0gbmV3IE1hcDxzdHJpbmcsIHN0cmluZ1tdPigpO1xuICAobGlua3MgfHwgW10pLmZvckVhY2goKGxuaykgPT4ge1xuICAgIGNvbnN0IGFyciA9IHRyYWNrQXJ0aXN0cy5nZXQobG5rLnRyYWNrX2lkKSB8fCBbXTtcbiAgICBjb25zdCBubSA9IGFydGlzdE1hcC5nZXQobG5rLmFydGlzdF9pZCk7XG4gICAgaWYgKG5tKSBhcnIucHVzaChubSk7XG4gICAgdHJhY2tBcnRpc3RzLnNldChsbmsudHJhY2tfaWQsIGFycik7XG4gIH0pO1xuXG4gIC8vIDMpIEZvciBlYWNoIHRyYWNrLCBjYWxsIGxhc3QuZm0gYW5kIHVwZGF0ZSB0aGUgcm93XG4gIGxldCB1cGRhdGVkID0gMDtcbiAgY29uc3QgcmVzdWx0czogYW55W10gPSBbXTtcblxuICBmb3IgKGNvbnN0IHRyIG9mIHRyYWNrcyBhcyBUcmFja1Jvd1tdKSB7XG4gICAgY29uc3QgYXJ0aXN0c0ZvclRyYWNrID0gdHJhY2tBcnRpc3RzLmdldCh0ci5pZCkgfHwgW107XG4gICAgY29uc3QgYXJ0aXN0ID0gYXJ0aXN0c0ZvclRyYWNrWzBdIHx8IFwiXCI7IC8vIHBpY2sgdGhlIGZpcnN0IChwcmltYXJ5KSBhcnRpc3RcbiAgICBpZiAoIWFydGlzdCB8fCAhdHIubmFtZSkgY29udGludWU7XG5cbiAgICBjb25zdCB0YWdzID0gYXdhaXQgZmV0Y2hUYWdzRm9yKGFydGlzdCwgdHIubmFtZSk7XG4gICAgY29uc3QgeyBvcmRlcmVkLCB0b3AgfSA9IHNjb3JlVGFncyh0YWdzKTtcbiAgICBjb25zdCB7IGVuZXJneSwgdmFsZW5jZSB9ID0gZGVyaXZlRW5lcmd5VmFsZW5jZShvcmRlcmVkKTtcblxuICAgIGNvbnN0IGdlbnJlX3ByaW1hcnkgPSB0b3AgfHwgdHJbXCJnZW5yZV9wcmltYXJ5XCJdIHx8IG51bGw7XG4gICAgY29uc3QgZ2VucmVfdGFncyA9IG9yZGVyZWQuc2xpY2UoMCwgOCk7XG5cbiAgICBjb25zdCB7IGVycm9yOiB1RXJyIH0gPSBhd2FpdCBzdXBhYmFzZUFkbWluXG4gICAgICAuZnJvbShcInNwb3RpZnlfdHJhY2tzXCIpXG4gICAgICAudXBkYXRlKHtcbiAgICAgICAgZ2VucmVfcHJpbWFyeSxcbiAgICAgICAgZ2VucmVfdGFnczogZ2VucmVfdGFncy5sZW5ndGggPyBnZW5yZV90YWdzIDogbnVsbCxcbiAgICAgICAgZGVyaXZlZF9lbmVyZ3k6IGVuZXJneSxcbiAgICAgICAgZGVyaXZlZF92YWxlbmNlOiB2YWxlbmNlLFxuICAgICAgICBsYXN0X2VucmljaGVkX2F0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICAgIG1ldGFfcHJvdmlkZXI6IHtcbiAgICAgICAgICAuLi4odHlwZW9mICh0ciBhcyBhbnkpLm1ldGFfcHJvdmlkZXIgPT09IFwib2JqZWN0XCIgPyAodHIgYXMgYW55KS5tZXRhX3Byb3ZpZGVyIDoge30pLFxuICAgICAgICAgIGxhc3RmbTogeyBvazogdHJ1ZSwgdGFnc0ZldGNoZWQ6IHRhZ3MubGVuZ3RoLCBhcnRpc3QsIHRyYWNrOiB0ci5uYW1lIH0sXG4gICAgICAgIH0sXG4gICAgICB9KVxuICAgICAgLmVxKFwiaWRcIiwgdHIuaWQpO1xuXG4gICAgcmVzdWx0cy5wdXNoKHtcbiAgICAgIGlkOiB0ci5pZCxcbiAgICAgIHRyYWNrOiB0ci5uYW1lLFxuICAgICAgYXJ0aXN0LFxuICAgICAgdG9wVGFnOiBnZW5yZV9wcmltYXJ5LFxuICAgICAgdGFnQ291bnQ6IHRhZ3MubGVuZ3RoLFxuICAgICAgdXBkYXRlZDogIXVFcnIsXG4gICAgICBlcnJvcjogdUVycj8ubWVzc2FnZSB8fCBudWxsLFxuICAgIH0pO1xuXG4gICAgaWYgKCF1RXJyKSB1cGRhdGVkKys7XG4gICAgLy8gU21hbGwgZGVsYXkgdG8gYmUgcG9saXRlIHRvIExhc3QuZm1cbiAgICBhd2FpdCBuZXcgUHJvbWlzZSgocikgPT4gc2V0VGltZW91dChyLCAxMjApKTtcbiAgfVxuXG4gIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IG9rOiB0cnVlLCB1cGRhdGVkLCBwcm9jZXNzZWQ6IHRyYWNrcz8ubGVuZ3RoIHx8IDAsIHJlc3VsdHMgfSk7XG59XG4iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwic3VwYWJhc2VBZG1pbiIsIkxBU1RGTV9LRVkiLCJwcm9jZXNzIiwiZW52IiwiTEFTVEZNX0FQSV9LRVkiLCJUQUdfQUxJQVMiLCJoaXBob3AiLCJsb2ZpIiwiZWRtIiwiZG5iIiwiaG91c2UiLCJ0ZWNobm8iLCJ0cmFuY2UiLCJhbWJpZW50IiwiY2hpbGwiLCJyb2NrIiwibWV0YWwiLCJwb3AiLCJ0cmFwIiwiZGFuY2UiLCJUQUdfVE9fRU5FUkdZIiwicmF2ZSIsImhhcmRzdHlsZSIsImFjb3VzdGljIiwiZG93bnRlbXBvIiwiVEFHX1RPX1ZBTEVOQ0UiLCJoYXBweSIsInVwYmVhdCIsInVwbGlmdGluZyIsIm1lbGFuY2hvbGljIiwic2FkIiwiZGFyayIsIlRBR19TVE9QIiwiU2V0Iiwibm9ybWFsaXplVGFnIiwidCIsInMiLCJ0cmltIiwidG9Mb3dlckNhc2UiLCJjbGVhbiIsInJlcGxhY2UiLCJhbGlhcyIsInNjb3JlVGFncyIsInRhZ3MiLCJtYXAiLCJNYXAiLCJ0YWciLCJuYW1lIiwibiIsImhhcyIsInciLCJNYXRoIiwibWF4IiwiTnVtYmVyIiwiY291bnQiLCJzZXQiLCJnZXQiLCJlbnRyaWVzIiwic29ydCIsImEiLCJiIiwib3JkZXJlZCIsImsiLCJ0b3AiLCJsZW5ndGgiLCJkZXJpdmVFbmVyZ3lWYWxlbmNlIiwiZW5lcmd5IiwidmFsZW5jZSIsImVTdW0iLCJlTiIsInZTdW0iLCJ2TiIsInRvRml4ZWQiLCJsZiIsIm1ldGhvZCIsInBhcmFtcyIsInVybCIsIlVSTCIsInNlYXJjaFBhcmFtcyIsIlN0cmluZyIsInYiLCJPYmplY3QiLCJyIiwiZmV0Y2giLCJ0b1N0cmluZyIsIm5leHQiLCJyZXZhbGlkYXRlIiwib2siLCJFcnJvciIsInN0YXR1cyIsImpzb24iLCJmZXRjaFRhZ3NGb3IiLCJhcnRpc3QiLCJ0cmFjayIsImp0IiwiYXV0b2NvcnJlY3QiLCJ0b3B0YWdzIiwicHVzaCIsImphIiwiUE9TVCIsImVycm9yIiwiZGF0YSIsImxpc3RlbnMiLCJsRXJyIiwiZnJvbSIsInNlbGVjdCIsIm9yZGVyIiwiYXNjZW5kaW5nIiwibGltaXQiLCJtZXNzYWdlIiwiaWRzIiwiQXJyYXkiLCJ0cmFja19pZCIsInNsaWNlIiwidXBkYXRlZCIsIm5vdGUiLCJ0cmFja3MiLCJ0RXJyIiwibGlua3MiLCJhcnRpc3RzIiwiUHJvbWlzZSIsImFsbCIsImluIiwiYXJ0aXN0TWFwIiwiZm9yRWFjaCIsImlkIiwidHJhY2tBcnRpc3RzIiwibG5rIiwiYXJyIiwibm0iLCJhcnRpc3RfaWQiLCJyZXN1bHRzIiwidHIiLCJhcnRpc3RzRm9yVHJhY2siLCJnZW5yZV9wcmltYXJ5IiwiZ2VucmVfdGFncyIsInVFcnIiLCJ1cGRhdGUiLCJkZXJpdmVkX2VuZXJneSIsImRlcml2ZWRfdmFsZW5jZSIsImxhc3RfZW5yaWNoZWRfYXQiLCJEYXRlIiwidG9JU09TdHJpbmciLCJtZXRhX3Byb3ZpZGVyIiwibGFzdGZtIiwidGFnc0ZldGNoZWQiLCJlcSIsInRvcFRhZyIsInRhZ0NvdW50Iiwic2V0VGltZW91dCIsInByb2Nlc3NlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/api/enrich/lastfm/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/supabaseAdmin.ts":
/*!******************************!*\
  !*** ./lib/supabaseAdmin.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabaseAdmin: () => (/* binding */ supabaseAdmin),\n/* harmony export */   supabaseService: () => (/* binding */ supabaseService),\n/* harmony export */   usingServiceRole: () => (/* binding */ usingServiceRole)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n// lib/supabaseAdmin.ts\n\nconst url = \"https://awxeorfppxdsygnhxlth.supabase.co\";\nconst serviceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\n// Expose whether the service role key is configured so API routes can bail early\nconst usingServiceRole = !!(url && serviceKey);\n// Lazily create a Supabase client that uses the service role key.  This should\n// only be used in server-side code as it has full access to the database.\nfunction supabaseService() {\n    if (!usingServiceRole) {\n        throw new Error(\"SUPABASE_SERVICE_ROLE_KEY is not set\");\n    }\n    return (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(url, serviceKey, {\n        auth: {\n            persistSession: false,\n            autoRefreshToken: false\n        }\n    });\n}\n// Convenience singleton for callers that just need a client instance.\nconst supabaseAdmin = usingServiceRole ? supabaseService() : null;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvc3VwYWJhc2VBZG1pbi50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsdUJBQXVCO0FBQzhCO0FBRXJELE1BQU1DLE1BQU1DLDBDQUFvQztBQUNoRCxNQUFNRyxhQUFhSCxRQUFRQyxHQUFHLENBQUNHLHlCQUF5QjtBQUV4RCxpRkFBaUY7QUFDMUUsTUFBTUMsbUJBQW1CLENBQUMsQ0FBRU4sQ0FBQUEsT0FBT0ksVUFBUyxFQUFHO0FBRXRELCtFQUErRTtBQUMvRSwwRUFBMEU7QUFDbkUsU0FBU0c7SUFDZCxJQUFJLENBQUNELGtCQUFrQjtRQUNyQixNQUFNLElBQUlFLE1BQU07SUFDbEI7SUFDQSxPQUFPVCxtRUFBWUEsQ0FBQ0MsS0FBTUksWUFBYTtRQUNyQ0ssTUFBTTtZQUFFQyxnQkFBZ0I7WUFBT0Msa0JBQWtCO1FBQU07SUFDekQ7QUFDRjtBQUVBLHNFQUFzRTtBQUMvRCxNQUFNQyxnQkFBZ0JOLG1CQUFtQkMsb0JBQXFCLEtBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zb3VuZG1pbmQvLi9saWIvc3VwYWJhc2VBZG1pbi50cz8wOWQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGxpYi9zdXBhYmFzZUFkbWluLnRzXG5pbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tIFwiQHN1cGFiYXNlL3N1cGFiYXNlLWpzXCI7XG5cbmNvbnN0IHVybCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTDtcbmNvbnN0IHNlcnZpY2VLZXkgPSBwcm9jZXNzLmVudi5TVVBBQkFTRV9TRVJWSUNFX1JPTEVfS0VZO1xuXG4vLyBFeHBvc2Ugd2hldGhlciB0aGUgc2VydmljZSByb2xlIGtleSBpcyBjb25maWd1cmVkIHNvIEFQSSByb3V0ZXMgY2FuIGJhaWwgZWFybHlcbmV4cG9ydCBjb25zdCB1c2luZ1NlcnZpY2VSb2xlID0gISEodXJsICYmIHNlcnZpY2VLZXkpO1xuXG4vLyBMYXppbHkgY3JlYXRlIGEgU3VwYWJhc2UgY2xpZW50IHRoYXQgdXNlcyB0aGUgc2VydmljZSByb2xlIGtleS4gIFRoaXMgc2hvdWxkXG4vLyBvbmx5IGJlIHVzZWQgaW4gc2VydmVyLXNpZGUgY29kZSBhcyBpdCBoYXMgZnVsbCBhY2Nlc3MgdG8gdGhlIGRhdGFiYXNlLlxuZXhwb3J0IGZ1bmN0aW9uIHN1cGFiYXNlU2VydmljZSgpIHtcbiAgaWYgKCF1c2luZ1NlcnZpY2VSb2xlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiU1VQQUJBU0VfU0VSVklDRV9ST0xFX0tFWSBpcyBub3Qgc2V0XCIpO1xuICB9XG4gIHJldHVybiBjcmVhdGVDbGllbnQodXJsISwgc2VydmljZUtleSEsIHtcbiAgICBhdXRoOiB7IHBlcnNpc3RTZXNzaW9uOiBmYWxzZSwgYXV0b1JlZnJlc2hUb2tlbjogZmFsc2UgfSxcbiAgfSk7XG59XG5cbi8vIENvbnZlbmllbmNlIHNpbmdsZXRvbiBmb3IgY2FsbGVycyB0aGF0IGp1c3QgbmVlZCBhIGNsaWVudCBpbnN0YW5jZS5cbmV4cG9ydCBjb25zdCBzdXBhYmFzZUFkbWluID0gdXNpbmdTZXJ2aWNlUm9sZSA/IHN1cGFiYXNlU2VydmljZSgpIDogKG51bGwgYXMgYW55KTtcbiJdLCJuYW1lcyI6WyJjcmVhdGVDbGllbnQiLCJ1cmwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwic2VydmljZUtleSIsIlNVUEFCQVNFX1NFUlZJQ0VfUk9MRV9LRVkiLCJ1c2luZ1NlcnZpY2VSb2xlIiwic3VwYWJhc2VTZXJ2aWNlIiwiRXJyb3IiLCJhdXRoIiwicGVyc2lzdFNlc3Npb24iLCJhdXRvUmVmcmVzaFRva2VuIiwic3VwYWJhc2VBZG1pbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/supabaseAdmin.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/whatwg-url","vendor-chunks/webidl-conversions"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fenrich%2Flastfm%2Froute&page=%2Fapi%2Fenrich%2Flastfm%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fenrich%2Flastfm%2Froute.ts&appDir=%2FUsers%2Fcormackerr%2FDesktop%2Fsoundmind%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fcormackerr%2FDesktop%2Fsoundmind&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();